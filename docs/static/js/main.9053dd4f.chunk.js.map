{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACI,sBAAOC,SAXU,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,EAAc,CAACE,IACfC,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAnBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,8BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsBDO,EAzBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEd,ECHwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAX,GAEnBS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAKlB,CAACpB,IAEGqB,EDjB0BI,CAAczB,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IAErDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBe,EA1BM,WAEjB,MAAoCvC,mBAAS,CAAC,cAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQyC,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCbnC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9053dd4f.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue,setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 0) {\r\n            // setCategories(categories => [...categories, inputValue]);\r\n            setCategories([inputValue]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=wWklpQ4Er0Yml3rE01u9D49jo9ho6nrN`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from \"./GifGridItem\"\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import {useState, useEffect} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category).then(images => {\r\n\r\n            setState({\r\n                data: images,\r\n                loading: false,\r\n            });\r\n\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state; // { data:[], loading: true }\r\n\r\n}","import {useState} from \"react\";\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid\r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}